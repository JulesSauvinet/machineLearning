******************************
*	 TP1 Machine Learning    *
*							 *
******************************

Auteurs : 
Jules Sauvinet
Marine Ruiz

Date :
4 fevrier 2017

Structure de l'archive :
+---data
+---src
    +---model
    +---prediction
	+---test_classifiers.py
	+---text_mining.py
	+---anomaly_detection.py
	

Le fichier test_classifiers.py contient le code de la partie 1 :
I. Apprentissage supervise : Feature engineering et ClassificationI. Apprentissage supervise : Feature engineering et Classification
-> execution de 7 classifieurs (Random Forest, Decision Tree, Adaboost with Decision Tree, Gradient 
GradientBoostingClassifier, MLPClassifier, KNeighborsClassifier et Naive Bayes Classifier)
apres pretraitement des donnees, analyse ACP et ajout de combinaison polynomiales aux donnees (optionnels)
et selection de variables avec Random Forest (possibilite de changer par la methode selectKBest)
sur des donnees de credit


Le fichier text_mining.py contient le code de la partie 2 :
II. Apprentissage supervise sur des donnees textuelles : Feature engineering et Classification
-> Analyse textuelle des donnees avec un CountVetorizer, TDIDF et extraction d'une SVD,
puis execution des 7 classifieurs sur des donnees de SMS pour detecter ou non des SPAMS


Le fichier anomaly_detection.py contient le code de la partie 3 :
III. Apprentissage non supervise : Detection deanomalies
-> Detection de points d'anomalies dans le scatter plot de la tete de Mickey
avec IsolationForest, Robust covariance et One Class SVM
-> Detection des Spam dans le jeu de donnees SMS
avec IsolationForest et One Class SVM
La detection est difficile et ne fonctionne pas toujours. 
Le fichier "resultat_anomaly_detection.txt" contient la sortie standard
d'une execution.




